{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Below is an example of a Markdown document that both explains the theoretical framework behind projectile motion and implements a simulation in Python. You can use this as a starting point for your project. Projectile Motion Analysis and Simulation Projectile motion, while seemingly simple, provides a versatile framework for exploring key principles of physics. In this document, we will derive the fundamental equations of motion, analyze the range as a function of the projection angle and other parameters, discuss practical applications, and implement a computational simulation. 1. Theoretical Foundation 1.1 Derivation of the Equations of Motion Consider a projectile launched with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) with respect to the horizontal. Assuming no air resistance and that the only force acting is gravity ( \\(g\\) ), we start with the basic differential equations for the horizontal and vertical components. Horizontal Motion (no acceleration): $$ \\frac{d^2x}{dt^2} = 0 \\quad \\Rightarrow \\quad x(t) = v_0 \\cos(\\theta) \\, t + x_0 $$ With \\(x_0 = 0\\) , we have: $$ x(t) = v_0 \\cos(\\theta) \\, t $$ Vertical Motion (constant acceleration due to gravity): $$ \\frac{d^2y}{dt^2} = -g \\quad \\Rightarrow \\quad y(t) = v_0 \\sin(\\theta) \\, t - \\frac{1}{2} g t^2 + y_0 $$ Assuming launch from the ground ( \\(y_0 = 0\\) ): $$ y(t) = v_0 \\sin(\\theta) \\, t - \\frac{1}{2} g t^2 $$ These equations form the family of solutions for projectile motion. Variations in the initial conditions \\(v_0\\) , \\(\\theta\\) , and even \\(y_0\\) (launch height) yield different trajectories, offering a rich parameter space to explore. 1.2 Family of Solutions Dependence on \\(v_0\\) : A higher initial velocity increases both the horizontal distance and the maximum height reached. Dependence on \\(\\theta\\) : The angle of projection determines the shape of the trajectory. The horizontal range \\(R\\) (assuming launch and landing at the same height) is given by: $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ This result comes from solving \\(y(t) = 0\\) (for \\(t > 0\\) ) and substituting back into \\(x(t)\\) . Dependence on \\(g\\) : The gravitational acceleration \\(g\\) inversely affects the range and the maximum height. Lower \\(g\\) (as on the Moon) leads to longer ranges and higher trajectories. 2. Analysis of the Range 2.1 Range as a Function of the Projection Angle For a projectile launched from ground level, the horizontal range is: $$ R(\\theta) = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ This formula shows a sinusoidal dependence on \\(2\\theta\\) with a maximum when \\(2\\theta = 90^\\circ\\) (i.e., \\(\\theta = 45^\\circ\\) ). As \\(\\theta\\) deviates from \\(45^\\circ\\) , the range decreases. 2.2 Effects of Other Parameters Initial Velocity ( \\(v_0\\) ) : The range increases quadratically with \\(v_0\\) . Doubling the speed results in a fourfold increase in range. Gravitational Acceleration ( \\(g\\) ) : The range is inversely proportional to \\(g\\) . A smaller \\(g\\) leads to a longer range. Launch Height ( \\(y_0\\) ) : For projectiles launched from an elevated position, the time of flight increases, leading to a longer range. The equations become more complex, typically requiring solving a quadratic equation in \\(t\\) . 3. Practical Applications The idealized projectile model can be adapted to more complex real-world situations: Uneven Terrain: When the launch and landing heights differ, the time of flight is determined by solving $$ y(t) = y_0 + v_0 \\sin(\\theta) \\, t - \\frac{1}{2} g t^2 = y_{\\text{landing}} $$ Air Resistance: Introducing a drag force (often modeled as proportional to the velocity or the square of the velocity) leads to non-linear differential equations that may require numerical solutions. Sports and Engineering: From predicting the flight of a soccer ball to the trajectory of missiles, understanding projectile motion is key in many fields. 4. Simulation of the project within html project Simulation 5. Discussion on Limitations and Extensions 5.1 Limitations of the Idealized Model No Air Resistance: The simulation assumes a vacuum. In reality, drag can significantly affect the projectile\u2019s path. Flat Terrain Assumption: The standard equations assume the projectile lands at the same vertical height from which it was launched. Constant Gravity: In real scenarios (especially in astrophysics), gravity may vary with height. 5.2 Extensions for a More Realistic Model Air Resistance: Incorporate drag forces that are proportional to velocity or the square of the velocity. This generally requires numerical integration (e.g., using scipy.integrate.solve_ivp ). Variable Launch and Landing Heights: Modify the equations to account for different initial and final heights. Wind Effects: Include horizontal wind acceleration to model more complex trajectories. Conclusion This project demonstrates how projectile motion can be explored theoretically and computationally. By deriving the equations of motion, analyzing the range as a function of projection angle and other parameters, and simulating trajectories with Python, one gains both theoretical insights and practical tools for further investigations into physics and engineering applications. Feel free to build upon this framework by adding more realistic features like air resistance and varying terrain, thereby expanding the utility of the model in real-world scenarios. This Markdown document, along with the included Python code, provides a comprehensive overview and a hands-on tool to explore projectile motion.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"Below is an example of a Markdown document that both explains the theoretical framework behind projectile motion and implements a simulation in Python. You can use this as a starting point for your project.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-motion-analysis-and-simulation","text":"Projectile motion, while seemingly simple, provides a versatile framework for exploring key principles of physics. In this document, we will derive the fundamental equations of motion, analyze the range as a function of the projection angle and other parameters, discuss practical applications, and implement a computational simulation.","title":"Projectile Motion Analysis and Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#11-derivation-of-the-equations-of-motion","text":"Consider a projectile launched with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) with respect to the horizontal. Assuming no air resistance and that the only force acting is gravity ( \\(g\\) ), we start with the basic differential equations for the horizontal and vertical components. Horizontal Motion (no acceleration): $$ \\frac{d^2x}{dt^2} = 0 \\quad \\Rightarrow \\quad x(t) = v_0 \\cos(\\theta) \\, t + x_0 $$ With \\(x_0 = 0\\) , we have: $$ x(t) = v_0 \\cos(\\theta) \\, t $$ Vertical Motion (constant acceleration due to gravity): $$ \\frac{d^2y}{dt^2} = -g \\quad \\Rightarrow \\quad y(t) = v_0 \\sin(\\theta) \\, t - \\frac{1}{2} g t^2 + y_0 $$ Assuming launch from the ground ( \\(y_0 = 0\\) ): $$ y(t) = v_0 \\sin(\\theta) \\, t - \\frac{1}{2} g t^2 $$ These equations form the family of solutions for projectile motion. Variations in the initial conditions \\(v_0\\) , \\(\\theta\\) , and even \\(y_0\\) (launch height) yield different trajectories, offering a rich parameter space to explore.","title":"1.1 Derivation of the Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#12-family-of-solutions","text":"Dependence on \\(v_0\\) : A higher initial velocity increases both the horizontal distance and the maximum height reached. Dependence on \\(\\theta\\) : The angle of projection determines the shape of the trajectory. The horizontal range \\(R\\) (assuming launch and landing at the same height) is given by: $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ This result comes from solving \\(y(t) = 0\\) (for \\(t > 0\\) ) and substituting back into \\(x(t)\\) . Dependence on \\(g\\) : The gravitational acceleration \\(g\\) inversely affects the range and the maximum height. Lower \\(g\\) (as on the Moon) leads to longer ranges and higher trajectories.","title":"1.2 Family of Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#21-range-as-a-function-of-the-projection-angle","text":"For a projectile launched from ground level, the horizontal range is: $$ R(\\theta) = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ This formula shows a sinusoidal dependence on \\(2\\theta\\) with a maximum when \\(2\\theta = 90^\\circ\\) (i.e., \\(\\theta = 45^\\circ\\) ). As \\(\\theta\\) deviates from \\(45^\\circ\\) , the range decreases.","title":"2.1 Range as a Function of the Projection Angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#22-effects-of-other-parameters","text":"Initial Velocity ( \\(v_0\\) ) : The range increases quadratically with \\(v_0\\) . Doubling the speed results in a fourfold increase in range. Gravitational Acceleration ( \\(g\\) ) : The range is inversely proportional to \\(g\\) . A smaller \\(g\\) leads to a longer range. Launch Height ( \\(y_0\\) ) : For projectiles launched from an elevated position, the time of flight increases, leading to a longer range. The equations become more complex, typically requiring solving a quadratic equation in \\(t\\) .","title":"2.2 Effects of Other Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"The idealized projectile model can be adapted to more complex real-world situations: Uneven Terrain: When the launch and landing heights differ, the time of flight is determined by solving $$ y(t) = y_0 + v_0 \\sin(\\theta) \\, t - \\frac{1}{2} g t^2 = y_{\\text{landing}} $$ Air Resistance: Introducing a drag force (often modeled as proportional to the velocity or the square of the velocity) leads to non-linear differential equations that may require numerical solutions. Sports and Engineering: From predicting the flight of a soccer ball to the trajectory of missiles, understanding projectile motion is key in many fields.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-simulation-of-the-project-within-html-project","text":"Simulation","title":"4. Simulation of the project within html project"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-discussion-on-limitations-and-extensions","text":"","title":"5. Discussion on Limitations and Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#51-limitations-of-the-idealized-model","text":"No Air Resistance: The simulation assumes a vacuum. In reality, drag can significantly affect the projectile\u2019s path. Flat Terrain Assumption: The standard equations assume the projectile lands at the same vertical height from which it was launched. Constant Gravity: In real scenarios (especially in astrophysics), gravity may vary with height.","title":"5.1 Limitations of the Idealized Model"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#52-extensions-for-a-more-realistic-model","text":"Air Resistance: Incorporate drag forces that are proportional to velocity or the square of the velocity. This generally requires numerical integration (e.g., using scipy.integrate.solve_ivp ). Variable Launch and Landing Heights: Modify the equations to account for different initial and final heights. Wind Effects: Include horizontal wind acceleration to model more complex trajectories.","title":"5.2 Extensions for a More Realistic Model"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion","text":"This project demonstrates how projectile motion can be explored theoretically and computationally. By deriving the equations of motion, analyzing the range as a function of projection angle and other parameters, and simulating trajectories with Python, one gains both theoretical insights and practical tools for further investigations into physics and engineering applications. Feel free to build upon this framework by adding more realistic features like air resistance and varying terrain, thereby expanding the utility of the model in real-world scenarios. This Markdown document, along with the included Python code, provides a comprehensive overview and a hands-on tool to explore projectile motion.","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Forced Damped Pendulum and Orbital Mechanics 1. Theoretical Foundation 1.1 Governing Equation of Motion The forced damped pendulum is governed by the following nonlinear differential equation: \\[ \\frac{d^2\\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{l} \\sin\\theta = A \\cos(\\omega t) \\] where: - \\( \\theta \\) is the angular displacement, - \\( b \\) is the damping coefficient, - \\( g \\) is the gravitational acceleration, - \\( l \\) is the length of the pendulum, - \\( A \\) is the amplitude of the external driving force, - \\( \\omega \\) is the driving frequency. 1.2 Approximate Solutions for Small-Angle Oscillations For small angles ( \\( \\theta \\approx \\sin\\theta \\) ), the equation simplifies to: \\[ \\frac{d^2\\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{l} \\theta = A \\cos(\\omega t) \\] Solving this linearized equation provides insights into resonance, stability, and the behavior of the pendulum under small perturbations. 1.3 Resonance Conditions and Energy Implications Resonance occurs when \\( \\omega \\approx \\sqrt{g/l} \\) , leading to large oscillations. Energy transfer efficiency is maximized at resonance, which can cause instability or even chaotic motion depending on the damping coefficient and driving amplitude. 2. Analysis of Dynamics 2.1 Influence of System Parameters Damping coefficient (b): High damping leads to overdamped motion, while low damping results in sustained oscillations. Driving amplitude (A): Higher amplitudes increase the possibility of nonlinear and chaotic behavior. Driving frequency ( \\( \\omega \\) ): Determines whether the system undergoes resonance, quasi-periodic motion, or chaos. 2.2 Transition from Regular to Chaotic Motion The system exhibits a transition from periodic to chaotic motion as parameters change. A Poincar\u00e9 section and bifurcation diagram can help visualize these transitions. 3. Practical Applications Energy Harvesting: Used in piezoelectric and electromagnetic energy conversion systems. Suspension Bridges: Can experience forced oscillations leading to instability (e.g., Tacoma Narrows Bridge collapse). Oscillating Circuits: Analogous to driven RLC circuits with damping and external forcing. 4. Implementation A Python-based simulation using numerical integration (Runge-Kutta method) will be developed to model the motion and analyze its characteristics. Customizing Fonts in Plots To enhance readability, custom fonts will be applied to all visualizations using Matplotlib: import matplotlib.pyplot as plt from matplotlib import font_manager # Set global font style plt.rcParams['font.family'] = 'Georgia' # Change to preferred font plt.rcParams['font.size'] = 14 # Adjust font size Deliverables: Python script implementing forced damped pendulum simulation. Graphical outputs (phase portraits, bifurcation diagrams, and Poincar\u00e9 sections). Explanation of results and potential extensions (nonlinear damping, non-periodic driving forces). Gravity and Orbital Mechanics Problem 1: Orbital Period and Orbital Radius 1.1 Derivation of Kepler\u2019s Third Law Kepler\u2019s Third Law states: \\[ T^2 \\propto r^3 \\] where: - \\( T \\) is the orbital period, - \\( r \\) is the orbital radius. Using Newton\u2019s laws, we derive: \\[ T^2 = \\frac{4\\pi^2 r^3}{GM} \\] where \\( G \\) is the gravitational constant and \\( M \\) is the central mass. 1.2 Implications for Astronomy Used to determine planetary masses and distances. Essential for satellite mission planning. Extends to exoplanet detection via transit methods. 1.3 Computational Verification A numerical simulation will model circular orbits and verify the period-radius relationship. Deliverables: Python notebook simulating circular orbits. Graphical representations of orbital motion. Discussion on elliptical orbits and generalizations. Problem 2: Escape Velocities and Cosmic Velocities 2.1 Definitions First cosmic velocity (orbital velocity): \\( v_o = \\sqrt{GM/r} \\) Second cosmic velocity (escape velocity): \\( v_e = \\sqrt{2GM/r} \\) Third cosmic velocity (solar system escape): Higher than \\( v_e \\) to escape Sun\u2019s gravity. 2.2 Mathematical Analysis Escape velocity depends on mass and radius of the celestial body: \\[ v_e = \\sqrt{2gr} \\] where \\( g \\) is the gravitational acceleration at the surface. 2.3 Applications in Space Exploration Satellite launches (low Earth orbit requires first cosmic velocity). Interplanetary missions (Mars rovers, interstellar probes). Space tourism and future colonization. 2.4 Computational Simulation A Python model will calculate and visualize escape velocities for Earth, Mars, and Jupiter. Deliverables: Python script modeling escape velocities. Graphical outputs (velocity vs. celestial body comparisons). Discussion on interplanetary travel requirements. Additional Python Projects 1. Projectile Motion with Air Resistance simulation Conclusion This project bridges theoretical analysis with computational modeling, providing insights into oscillatory dynamics and celestial mechanics. The simulations and visualizations will help in understanding forced oscillations, orbital mechanics, and escape conditions in various physical contexts.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#forced-damped-pendulum-and-orbital-mechanics","text":"","title":"Forced Damped Pendulum and Orbital Mechanics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#11-governing-equation-of-motion","text":"The forced damped pendulum is governed by the following nonlinear differential equation: \\[ \\frac{d^2\\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{l} \\sin\\theta = A \\cos(\\omega t) \\] where: - \\( \\theta \\) is the angular displacement, - \\( b \\) is the damping coefficient, - \\( g \\) is the gravitational acceleration, - \\( l \\) is the length of the pendulum, - \\( A \\) is the amplitude of the external driving force, - \\( \\omega \\) is the driving frequency.","title":"1.1 Governing Equation of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#12-approximate-solutions-for-small-angle-oscillations","text":"For small angles ( \\( \\theta \\approx \\sin\\theta \\) ), the equation simplifies to: \\[ \\frac{d^2\\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{l} \\theta = A \\cos(\\omega t) \\] Solving this linearized equation provides insights into resonance, stability, and the behavior of the pendulum under small perturbations.","title":"1.2 Approximate Solutions for Small-Angle Oscillations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#13-resonance-conditions-and-energy-implications","text":"Resonance occurs when \\( \\omega \\approx \\sqrt{g/l} \\) , leading to large oscillations. Energy transfer efficiency is maximized at resonance, which can cause instability or even chaotic motion depending on the damping coefficient and driving amplitude.","title":"1.3 Resonance Conditions and Energy Implications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#21-influence-of-system-parameters","text":"Damping coefficient (b): High damping leads to overdamped motion, while low damping results in sustained oscillations. Driving amplitude (A): Higher amplitudes increase the possibility of nonlinear and chaotic behavior. Driving frequency ( \\( \\omega \\) ): Determines whether the system undergoes resonance, quasi-periodic motion, or chaos.","title":"2.1 Influence of System Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#22-transition-from-regular-to-chaotic-motion","text":"The system exhibits a transition from periodic to chaotic motion as parameters change. A Poincar\u00e9 section and bifurcation diagram can help visualize these transitions.","title":"2.2 Transition from Regular to Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"Energy Harvesting: Used in piezoelectric and electromagnetic energy conversion systems. Suspension Bridges: Can experience forced oscillations leading to instability (e.g., Tacoma Narrows Bridge collapse). Oscillating Circuits: Analogous to driven RLC circuits with damping and external forcing.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation","text":"A Python-based simulation using numerical integration (Runge-Kutta method) will be developed to model the motion and analyze its characteristics.","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#customizing-fonts-in-plots","text":"To enhance readability, custom fonts will be applied to all visualizations using Matplotlib: import matplotlib.pyplot as plt from matplotlib import font_manager # Set global font style plt.rcParams['font.family'] = 'Georgia' # Change to preferred font plt.rcParams['font.size'] = 14 # Adjust font size","title":"Customizing Fonts in Plots"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#deliverables","text":"Python script implementing forced damped pendulum simulation. Graphical outputs (phase portraits, bifurcation diagrams, and Poincar\u00e9 sections). Explanation of results and potential extensions (nonlinear damping, non-periodic driving forces).","title":"Deliverables:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#gravity-and-orbital-mechanics","text":"","title":"Gravity and Orbital Mechanics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-1-orbital-period-and-orbital-radius","text":"","title":"Problem 1: Orbital Period and Orbital Radius"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#11-derivation-of-keplers-third-law","text":"Kepler\u2019s Third Law states: \\[ T^2 \\propto r^3 \\] where: - \\( T \\) is the orbital period, - \\( r \\) is the orbital radius. Using Newton\u2019s laws, we derive: \\[ T^2 = \\frac{4\\pi^2 r^3}{GM} \\] where \\( G \\) is the gravitational constant and \\( M \\) is the central mass.","title":"1.1 Derivation of Kepler\u2019s Third Law"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#12-implications-for-astronomy","text":"Used to determine planetary masses and distances. Essential for satellite mission planning. Extends to exoplanet detection via transit methods.","title":"1.2 Implications for Astronomy"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#13-computational-verification","text":"A numerical simulation will model circular orbits and verify the period-radius relationship.","title":"1.3 Computational Verification"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#deliverables_1","text":"Python notebook simulating circular orbits. Graphical representations of orbital motion. Discussion on elliptical orbits and generalizations.","title":"Deliverables:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2-escape-velocities-and-cosmic-velocities","text":"","title":"Problem 2: Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#21-definitions","text":"First cosmic velocity (orbital velocity): \\( v_o = \\sqrt{GM/r} \\) Second cosmic velocity (escape velocity): \\( v_e = \\sqrt{2GM/r} \\) Third cosmic velocity (solar system escape): Higher than \\( v_e \\) to escape Sun\u2019s gravity.","title":"2.1 Definitions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#22-mathematical-analysis","text":"Escape velocity depends on mass and radius of the celestial body: \\[ v_e = \\sqrt{2gr} \\] where \\( g \\) is the gravitational acceleration at the surface.","title":"2.2 Mathematical Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#23-applications-in-space-exploration","text":"Satellite launches (low Earth orbit requires first cosmic velocity). Interplanetary missions (Mars rovers, interstellar probes). Space tourism and future colonization.","title":"2.3 Applications in Space Exploration"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#24-computational-simulation","text":"A Python model will calculate and visualize escape velocities for Earth, Mars, and Jupiter.","title":"2.4 Computational Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#deliverables_2","text":"Python script modeling escape velocities. Graphical outputs (velocity vs. celestial body comparisons). Discussion on interplanetary travel requirements.","title":"Deliverables:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#additional-python-projects","text":"","title":"Additional Python Projects"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-projectile-motion-with-air-resistance","text":"simulation","title":"1. Projectile Motion with Air Resistance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#conclusion","text":"This project bridges theoretical analysis with computational modeling, providing insights into oscillatory dynamics and celestial mechanics. The simulations and visualizations will help in understanding forced oscillations, orbital mechanics, and escape conditions in various physical contexts.","title":"Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Orbital Period and Orbital Radius Motivation Kepler's Third Law states that the square of the orbital period (T) is proportional to the cube of the orbital radius (r). This fundamental principle of celestial mechanics enables calculations of planetary motions and gravitational interactions, with applications ranging from satellite navigation to planetary science. Task Derive the mathematical relationship between the square of the orbital period and the cube of the orbital radius for circular orbits. Discuss its implications for astronomy, such as planetary mass and distance calculations. Analyze real-world examples (e.g., the Moon\u2019s orbit around Earth, planetary orbits in the Solar System). Implement a computational model to simulate circular orbits and verify the relationship. Mathematical Formulation Kepler's Third Law can be written as: \\(T^2 = \\frac{4\\pi^2 r^3}{GM}\\) where: - \\(T\\) is the orbital period, - \\(r\\) is the orbital radius, - \\(G\\) is the gravitational constant (6.674 \\times 10^{-11} m\u00b3/kg/s\u00b2), - \\(M\\) is the mass of the central body. Deliverables A Markdown document with a Python script or Jupyter Notebook implementing the simulations. Detailed explanations of the concepts. Graphical representations of circular orbits and the relationship between orbital period and radius. Discussion on extending the relationship to elliptical orbits. An interactive HTML simulation of orbital mechanics. Escape Velocities and Cosmic Velocities Motivation Escape velocity is the minimum speed required to break free from a celestial body\u2019s gravitational pull. The first, second, and third cosmic velocities define the thresholds for orbiting, escaping, and leaving a star system, which are crucial for space exploration. Task Define and explain the first, second, and third cosmic velocities. Analyze the mathematical derivations and factors affecting these velocities. Calculate and visualize these velocities for Earth, Mars, and Jupiter. Discuss their significance in space exploration, including satellite launches and interplanetary missions. Mathematical Formulation The escape velocity $ v_e $ is given by: \\(v_e = \\sqrt{\\frac{2GM}{r}}\\) where: - \\(G\\) is the gravitational constant, - \\(M\\) is the mass of the celestial body, - \\(r\\) is the radius from the center of the body. For first, second, and third cosmic velocities: - First cosmic velocity (orbital speed): \\(v_1 = \\sqrt{\\frac{GM}{r}}\\) - Second cosmic velocity (escape velocity): \\(v_2 = \\sqrt{2} v_1\\) - Third cosmic velocity (solar system escape velocity): Depends on position in the system. Deliverables A Markdown document with a Python script or Jupyter Notebook implementing the calculations and visualizations. Detailed explanations of the physics involved. Graphical representations of escape and cosmic velocities for different celestial bodies. An interactive HTML simulation for escape velocity calculations. Trajectories of a Freely Released Payload Near Earth Motivation When an object is released from a moving rocket, its trajectory depends on initial velocity, altitude, and gravitational forces. Understanding these trajectories is crucial for space missions, including satellite deployments and reentry planning. Task Analyze possible trajectories (e.g., parabolic, hyperbolic, elliptical) of a payload released near Earth. Perform a numerical simulation to compute the path based on initial conditions. Discuss how these trajectories relate to orbital insertion, reentry, or escape scenarios. Develop a computational tool to simulate and visualize the motion of a payload under Earth\u2019s gravity. Mathematical Formulation Using Newton\u2019s Law of Gravitation and motion equations: \\(F = \\frac{GMm}{r^2}\\) The equations of motion for a payload in free space are given by: \\(\\frac{d^2r}{dt^2} = -\\frac{GM}{r^2}\\) where \\(r\\) is the distance from Earth's center. Hints and Resources Use Newton\u2019s Law of Gravitation and Kepler\u2019s Laws to derive equations. Implement numerical simulations using Python. Explore real-world applications in space mission planning and planetary exploration. Deliverables A Markdown document with a Python script or Jupyter Notebook implementing the simulations. Detailed explanations of the physics behind payload trajectories. Graphical representations of different trajectory types near Earth. An interactive HTML simulation to visualize payload trajectories. HTML Simulation Below is an interactive simulation using HTML, JavaScript, and the Canvas API to visualize Kepler's Third Law and circular orbits. Orbital Simulation This simulation visually demonstrates an orbiting body obeying Kepler\u2019s Third Law. It updates planetary motion in real time using Newtonian mechanics.","title":"Orbital Period and Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius","text":"","title":"Orbital Period and Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#motivation","text":"Kepler's Third Law states that the square of the orbital period (T) is proportional to the cube of the orbital radius (r). This fundamental principle of celestial mechanics enables calculations of planetary motions and gravitational interactions, with applications ranging from satellite navigation to planetary science.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#task","text":"Derive the mathematical relationship between the square of the orbital period and the cube of the orbital radius for circular orbits. Discuss its implications for astronomy, such as planetary mass and distance calculations. Analyze real-world examples (e.g., the Moon\u2019s orbit around Earth, planetary orbits in the Solar System). Implement a computational model to simulate circular orbits and verify the relationship.","title":"Task"},{"location":"1%20Physics/2%20Gravity/Problem_1/#mathematical-formulation","text":"Kepler's Third Law can be written as: \\(T^2 = \\frac{4\\pi^2 r^3}{GM}\\) where: - \\(T\\) is the orbital period, - \\(r\\) is the orbital radius, - \\(G\\) is the gravitational constant (6.674 \\times 10^{-11} m\u00b3/kg/s\u00b2), - \\(M\\) is the mass of the central body.","title":"Mathematical Formulation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#deliverables","text":"A Markdown document with a Python script or Jupyter Notebook implementing the simulations. Detailed explanations of the concepts. Graphical representations of circular orbits and the relationship between orbital period and radius. Discussion on extending the relationship to elliptical orbits. An interactive HTML simulation of orbital mechanics.","title":"Deliverables"},{"location":"1%20Physics/2%20Gravity/Problem_1/#escape-velocities-and-cosmic-velocities","text":"","title":"Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_1/#motivation_1","text":"Escape velocity is the minimum speed required to break free from a celestial body\u2019s gravitational pull. The first, second, and third cosmic velocities define the thresholds for orbiting, escaping, and leaving a star system, which are crucial for space exploration.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#task_1","text":"Define and explain the first, second, and third cosmic velocities. Analyze the mathematical derivations and factors affecting these velocities. Calculate and visualize these velocities for Earth, Mars, and Jupiter. Discuss their significance in space exploration, including satellite launches and interplanetary missions.","title":"Task"},{"location":"1%20Physics/2%20Gravity/Problem_1/#mathematical-formulation_1","text":"The escape velocity $ v_e $ is given by: \\(v_e = \\sqrt{\\frac{2GM}{r}}\\) where: - \\(G\\) is the gravitational constant, - \\(M\\) is the mass of the celestial body, - \\(r\\) is the radius from the center of the body. For first, second, and third cosmic velocities: - First cosmic velocity (orbital speed): \\(v_1 = \\sqrt{\\frac{GM}{r}}\\) - Second cosmic velocity (escape velocity): \\(v_2 = \\sqrt{2} v_1\\) - Third cosmic velocity (solar system escape velocity): Depends on position in the system.","title":"Mathematical Formulation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#deliverables_1","text":"A Markdown document with a Python script or Jupyter Notebook implementing the calculations and visualizations. Detailed explanations of the physics involved. Graphical representations of escape and cosmic velocities for different celestial bodies. An interactive HTML simulation for escape velocity calculations.","title":"Deliverables"},{"location":"1%20Physics/2%20Gravity/Problem_1/#trajectories-of-a-freely-released-payload-near-earth","text":"","title":"Trajectories of a Freely Released Payload Near Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#motivation_2","text":"When an object is released from a moving rocket, its trajectory depends on initial velocity, altitude, and gravitational forces. Understanding these trajectories is crucial for space missions, including satellite deployments and reentry planning.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#task_2","text":"Analyze possible trajectories (e.g., parabolic, hyperbolic, elliptical) of a payload released near Earth. Perform a numerical simulation to compute the path based on initial conditions. Discuss how these trajectories relate to orbital insertion, reentry, or escape scenarios. Develop a computational tool to simulate and visualize the motion of a payload under Earth\u2019s gravity.","title":"Task"},{"location":"1%20Physics/2%20Gravity/Problem_1/#mathematical-formulation_2","text":"Using Newton\u2019s Law of Gravitation and motion equations: \\(F = \\frac{GMm}{r^2}\\) The equations of motion for a payload in free space are given by: \\(\\frac{d^2r}{dt^2} = -\\frac{GM}{r^2}\\) where \\(r\\) is the distance from Earth's center.","title":"Mathematical Formulation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#hints-and-resources","text":"Use Newton\u2019s Law of Gravitation and Kepler\u2019s Laws to derive equations. Implement numerical simulations using Python. Explore real-world applications in space mission planning and planetary exploration.","title":"Hints and Resources"},{"location":"1%20Physics/2%20Gravity/Problem_1/#deliverables_2","text":"A Markdown document with a Python script or Jupyter Notebook implementing the simulations. Detailed explanations of the physics behind payload trajectories. Graphical representations of different trajectory types near Earth. An interactive HTML simulation to visualize payload trajectories.","title":"Deliverables"},{"location":"1%20Physics/2%20Gravity/Problem_1/#html-simulation","text":"Below is an interactive simulation using HTML, JavaScript, and the Canvas API to visualize Kepler's Third Law and circular orbits. Orbital Simulation This simulation visually demonstrates an orbiting body obeying Kepler\u2019s Third Law. It updates planetary motion in real time using Newtonian mechanics.","title":"HTML Simulation"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Escape Velocities and Cosmic Velocities Motivation The concept of escape velocity is crucial for understanding the conditions required to leave a celestial body's gravitational influence. Extending this concept, the first, second, and third cosmic velocities define the thresholds for orbiting, escaping, and leaving a star system. These principles underpin modern space exploration, from launching satellites to interplanetary missions. Task Define the first, second, and third cosmic velocities, explaining their physical meaning. Analyze the mathematical derivations and parameters affecting these velocities. Calculate and visualize these velocities for different celestial bodies like Earth, Mars, and Jupiter. Discuss their importance in space exploration, including launching satellites, missions to other planets, and potential interstellar travel. Mathematical Formulation Escape Velocity The escape velocity \\(v_e\\) is the minimum speed an object must have to break free from the gravitational pull of a celestial body without any additional propulsion. It is derived from the energy conservation principle: \\(KE + PE = 0 \\Rightarrow \\frac{1}{2} m v_e^2 - \\frac{GMm}{r} = 0\\) Solving for \\(v_e\\) : \\(v_e = \\sqrt{\\frac{2GM}{r}}\\) where: - \\(G\\) is the gravitational constant ( \\(6.674 \\times 10^{-11}\\) m\u00b3/kg/s\u00b2), - \\(M\\) is the mass of the celestial body, - \\(r\\) is the radius from the center of the body. First Cosmic Velocity (Orbital Speed) This is the velocity needed to maintain a circular orbit around a celestial body: \\(v_1 = \\sqrt{\\frac{GM}{r}}\\) Second Cosmic Velocity (Escape Velocity) The escape velocity is simply \\(\\sqrt{2}\\) times the first cosmic velocity: \\(v_2 = \\sqrt{2} v_1 = \\sqrt{\\frac{2GM}{r}}\\) Third Cosmic Velocity (Solar System Escape) This is the speed required to leave the influence of the Sun's gravity from a planet\u2019s orbit. It depends on the planet\u2019s distance from the Sun: \\(v_3 = \\sqrt{\\frac{2G M_{sun}}{r_{planet}}}\\) Importance in Space Exploration Satellites: Must reach the first cosmic velocity to maintain stable orbits. Space Missions: Rockets need to achieve second cosmic velocity to leave Earth\u2019s gravity and travel to other planets. Interstellar Travel: Future missions aiming to leave the Solar System must reach the third cosmic velocity. Deliverables A Markdown document with a Python script or Jupyter Notebook implementing the simulations. A detailed explanation of the subjects. Graphical representations of escape velocities and cosmic velocities for various celestial bodies. An interactive HTML simulation demonstrating escape velocities. HTML Simulation Below is an interactive simulation using HTML, JavaScript, and the Canvas API to visualize escape velocity for different celestial bodies. Escape Velocity Simulation This simulation allows users to select different planets and see their respective escape velocities.","title":"Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#escape-velocities-and-cosmic-velocities","text":"","title":"Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#motivation","text":"The concept of escape velocity is crucial for understanding the conditions required to leave a celestial body's gravitational influence. Extending this concept, the first, second, and third cosmic velocities define the thresholds for orbiting, escaping, and leaving a star system. These principles underpin modern space exploration, from launching satellites to interplanetary missions.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#task","text":"Define the first, second, and third cosmic velocities, explaining their physical meaning. Analyze the mathematical derivations and parameters affecting these velocities. Calculate and visualize these velocities for different celestial bodies like Earth, Mars, and Jupiter. Discuss their importance in space exploration, including launching satellites, missions to other planets, and potential interstellar travel.","title":"Task"},{"location":"1%20Physics/2%20Gravity/Problem_2/#mathematical-formulation","text":"","title":"Mathematical Formulation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#escape-velocity","text":"The escape velocity \\(v_e\\) is the minimum speed an object must have to break free from the gravitational pull of a celestial body without any additional propulsion. It is derived from the energy conservation principle: \\(KE + PE = 0 \\Rightarrow \\frac{1}{2} m v_e^2 - \\frac{GMm}{r} = 0\\) Solving for \\(v_e\\) : \\(v_e = \\sqrt{\\frac{2GM}{r}}\\) where: - \\(G\\) is the gravitational constant ( \\(6.674 \\times 10^{-11}\\) m\u00b3/kg/s\u00b2), - \\(M\\) is the mass of the celestial body, - \\(r\\) is the radius from the center of the body.","title":"Escape Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#first-cosmic-velocity-orbital-speed","text":"This is the velocity needed to maintain a circular orbit around a celestial body: \\(v_1 = \\sqrt{\\frac{GM}{r}}\\)","title":"First Cosmic Velocity (Orbital Speed)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#second-cosmic-velocity-escape-velocity","text":"The escape velocity is simply \\(\\sqrt{2}\\) times the first cosmic velocity: \\(v_2 = \\sqrt{2} v_1 = \\sqrt{\\frac{2GM}{r}}\\)","title":"Second Cosmic Velocity (Escape Velocity)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#third-cosmic-velocity-solar-system-escape","text":"This is the speed required to leave the influence of the Sun's gravity from a planet\u2019s orbit. It depends on the planet\u2019s distance from the Sun: \\(v_3 = \\sqrt{\\frac{2G M_{sun}}{r_{planet}}}\\)","title":"Third Cosmic Velocity (Solar System Escape)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#importance-in-space-exploration","text":"Satellites: Must reach the first cosmic velocity to maintain stable orbits. Space Missions: Rockets need to achieve second cosmic velocity to leave Earth\u2019s gravity and travel to other planets. Interstellar Travel: Future missions aiming to leave the Solar System must reach the third cosmic velocity.","title":"Importance in Space Exploration"},{"location":"1%20Physics/2%20Gravity/Problem_2/#deliverables","text":"A Markdown document with a Python script or Jupyter Notebook implementing the simulations. A detailed explanation of the subjects. Graphical representations of escape velocities and cosmic velocities for various celestial bodies. An interactive HTML simulation demonstrating escape velocities.","title":"Deliverables"},{"location":"1%20Physics/2%20Gravity/Problem_2/#html-simulation","text":"Below is an interactive simulation using HTML, JavaScript, and the Canvas API to visualize escape velocity for different celestial bodies. Escape Velocity Simulation This simulation allows users to select different planets and see their respective escape velocities.","title":"HTML Simulation"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}